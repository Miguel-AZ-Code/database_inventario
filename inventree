-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.account_emailaddress
(
    id integer NOT NULL DEFAULT nextval('account_emailaddress_id_seq'::regclass),
    email character varying(254) COLLATE pg_catalog."default" NOT NULL,
    verified boolean NOT NULL,
    "primary" boolean NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT account_emailaddress_pkey PRIMARY KEY (id),
    CONSTRAINT account_emailaddress_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.account_emailconfirmation
(
    id integer NOT NULL DEFAULT nextval('account_emailconfirmation_id_seq'::regclass),
    created timestamp with time zone NOT NULL,
    sent timestamp with time zone,
    key character varying(64) COLLATE pg_catalog."default" NOT NULL,
    email_address_id integer NOT NULL,
    CONSTRAINT account_emailconfirmation_pkey PRIMARY KEY (id),
    CONSTRAINT account_emailconfirmation_key_key UNIQUE (key)
);

CREATE TABLE IF NOT EXISTS public.auth_group
(
    id integer NOT NULL DEFAULT nextval('auth_group_id_seq'::regclass),
    name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_group_pkey PRIMARY KEY (id),
    CONSTRAINT auth_group_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.auth_group_permissions
(
    id integer NOT NULL DEFAULT nextval('auth_group_permissions_id_seq'::regclass),
    group_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id)
);

CREATE TABLE IF NOT EXISTS public.auth_permission
(
    id integer NOT NULL DEFAULT nextval('auth_permission_id_seq'::regclass),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_permission_pkey PRIMARY KEY (id),
    CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename)
);

CREATE TABLE IF NOT EXISTS public.auth_user
(
    id integer NOT NULL DEFAULT nextval('auth_user_id_seq'::regclass),
    password character varying(128) COLLATE pg_catalog."default" NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    email character varying(254) COLLATE pg_catalog."default" NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    CONSTRAINT auth_user_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.auth_user_groups
(
    id integer NOT NULL DEFAULT nextval('auth_user_groups_id_seq'::regclass),
    user_id integer NOT NULL,
    group_id integer NOT NULL,
    CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id)
);

CREATE TABLE IF NOT EXISTS public.auth_user_user_permissions
(
    id integer NOT NULL DEFAULT nextval('auth_user_user_permissions_id_seq'::regclass),
    user_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id)
);

CREATE TABLE IF NOT EXISTS public.authtoken_token
(
    key character varying(40) COLLATE pg_catalog."default" NOT NULL,
    created timestamp with time zone NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT authtoken_token_pkey PRIMARY KEY (key),
    CONSTRAINT authtoken_token_user_id_key UNIQUE (user_id)
);

CREATE TABLE IF NOT EXISTS public.build_build
(
    id integer NOT NULL DEFAULT nextval('build_build_id_seq'::regclass),
    title character varying(100) COLLATE pg_catalog."default" NOT NULL,
    quantity integer NOT NULL,
    status integer NOT NULL,
    batch character varying(100) COLLATE pg_catalog."default",
    creation_date date NOT NULL,
    completion_date date,
    link character varying(200) COLLATE pg_catalog."default" NOT NULL,
    notes text COLLATE pg_catalog."default",
    completed_by_id integer,
    part_id integer NOT NULL,
    take_from_id integer,
    sales_order_id integer,
    level integer NOT NULL,
    lft integer NOT NULL,
    parent_id integer,
    rght integer NOT NULL,
    tree_id integer NOT NULL,
    reference character varying(64) COLLATE pg_catalog."default" NOT NULL,
    destination_id integer,
    completed integer NOT NULL,
    target_date date,
    issued_by_id integer,
    responsible_id integer,
    reference_int bigint NOT NULL,
    CONSTRAINT build_build_pkey PRIMARY KEY (id),
    CONSTRAINT build_build_reference_d64ea027_uniq UNIQUE (reference)
);

CREATE TABLE IF NOT EXISTS public.build_builditem
(
    id integer NOT NULL DEFAULT nextval('build_builditem_id_seq'::regclass),
    quantity numeric(15, 5) NOT NULL,
    build_id integer NOT NULL,
    stock_item_id integer NOT NULL,
    install_into_id integer,
    bom_item_id integer,
    CONSTRAINT build_builditem_pkey PRIMARY KEY (id),
    CONSTRAINT build_builditem_build_id_stock_item_id_i_9c3fd752_uniq UNIQUE (build_id, stock_item_id, install_into_id)
);

CREATE TABLE IF NOT EXISTS public.build_buildorderattachment
(
    id integer NOT NULL DEFAULT nextval('build_buildorderattachment_id_seq'::regclass),
    attachment character varying(100) COLLATE pg_catalog."default",
    comment character varying(100) COLLATE pg_catalog."default" NOT NULL,
    upload_date date,
    build_id integer NOT NULL,
    user_id integer,
    link character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT build_buildorderattachment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.common_colortheme
(
    id integer NOT NULL DEFAULT nextval('common_colortheme_id_seq'::regclass),
    name character varying(20) COLLATE pg_catalog."default" NOT NULL,
    "user" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT common_colortheme_pkey PRIMARY KEY (id),
    CONSTRAINT common_colortheme_user_key UNIQUE ("user")
);

CREATE TABLE IF NOT EXISTS public.common_inventreesetting
(
    id integer NOT NULL DEFAULT nextval('common_inventreesetting_id_seq'::regclass),
    key character varying(50) COLLATE pg_catalog."default" NOT NULL,
    value character varying(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT common_inventreesetting_pkey PRIMARY KEY (id),
    CONSTRAINT common_inventreesetting_key_key UNIQUE (key)
);

CREATE TABLE IF NOT EXISTS public.common_inventreeusersetting
(
    id integer NOT NULL DEFAULT nextval('common_inventreeusersetting_id_seq'::regclass),
    value character varying(200) COLLATE pg_catalog."default" NOT NULL,
    key character varying(50) COLLATE pg_catalog."default" NOT NULL,
    user_id integer,
    CONSTRAINT common_inventreeusersetting_pkey PRIMARY KEY (id),
    CONSTRAINT "unique key and user" UNIQUE (key, user_id)
);

CREATE TABLE IF NOT EXISTS public.common_newsfeedentry
(
    id integer NOT NULL DEFAULT nextval('common_newsfeedentry_id_seq'::regclass),
    feed_id character varying(250) COLLATE pg_catalog."default" NOT NULL,
    title character varying(250) COLLATE pg_catalog."default" NOT NULL,
    link character varying(250) COLLATE pg_catalog."default" NOT NULL,
    published timestamp with time zone NOT NULL,
    author character varying(250) COLLATE pg_catalog."default" NOT NULL,
    summary character varying(250) COLLATE pg_catalog."default" NOT NULL,
    read boolean NOT NULL,
    CONSTRAINT common_newsfeedentry_pkey PRIMARY KEY (id),
    CONSTRAINT common_newsfeedentry_feed_id_key UNIQUE (feed_id)
);

CREATE TABLE IF NOT EXISTS public.common_notificationentry
(
    id integer NOT NULL DEFAULT nextval('common_notificationentry_id_seq'::regclass),
    key character varying(250) COLLATE pg_catalog."default" NOT NULL,
    uid integer NOT NULL,
    updated timestamp with time zone NOT NULL,
    CONSTRAINT common_notificationentry_pkey PRIMARY KEY (id),
    CONSTRAINT common_notificationentry_key_uid_93240f63_uniq UNIQUE (key, uid)
);

CREATE TABLE IF NOT EXISTS public.common_notificationmessage
(
    id integer NOT NULL DEFAULT nextval('common_notificationmessage_id_seq'::regclass),
    target_object_id integer NOT NULL,
    source_object_id integer,
    category character varying(250) COLLATE pg_catalog."default" NOT NULL,
    name character varying(250) COLLATE pg_catalog."default" NOT NULL,
    message character varying(250) COLLATE pg_catalog."default",
    creation timestamp with time zone NOT NULL,
    read boolean NOT NULL,
    source_content_type_id integer,
    target_content_type_id integer NOT NULL,
    user_id integer,
    CONSTRAINT common_notificationmessage_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.common_webhookendpoint
(
    id integer NOT NULL DEFAULT nextval('common_webhookendpoint_id_seq'::regclass),
    endpoint_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    active boolean NOT NULL,
    token character varying(255) COLLATE pg_catalog."default",
    secret character varying(255) COLLATE pg_catalog."default",
    user_id integer,
    CONSTRAINT common_webhookendpoint_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.common_webhookmessage
(
    message_id uuid NOT NULL,
    host character varying(255) COLLATE pg_catalog."default" NOT NULL,
    header character varying(255) COLLATE pg_catalog."default",
    body jsonb,
    worked_on boolean NOT NULL,
    endpoint_id integer,
    CONSTRAINT common_webhookmessage_pkey PRIMARY KEY (message_id)
);

CREATE TABLE IF NOT EXISTS public.company_company
(
    id integer NOT NULL DEFAULT nextval('company_company_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(500) COLLATE pg_catalog."default" NOT NULL,
    website character varying(200) COLLATE pg_catalog."default" NOT NULL,
    address character varying(200) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(50) COLLATE pg_catalog."default" NOT NULL,
    email character varying(254) COLLATE pg_catalog."default",
    contact character varying(100) COLLATE pg_catalog."default" NOT NULL,
    link character varying(200) COLLATE pg_catalog."default" NOT NULL,
    image character varying(100) COLLATE pg_catalog."default",
    notes text COLLATE pg_catalog."default",
    is_customer boolean NOT NULL,
    is_supplier boolean NOT NULL,
    is_manufacturer boolean NOT NULL,
    currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    metadata jsonb,
    CONSTRAINT company_company_pkey PRIMARY KEY (id),
    CONSTRAINT unique_name_email_pair UNIQUE (name, email)
);

CREATE TABLE IF NOT EXISTS public.company_contact
(
    id integer NOT NULL DEFAULT nextval('company_contact_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(254) COLLATE pg_catalog."default" NOT NULL,
    role character varying(100) COLLATE pg_catalog."default" NOT NULL,
    company_id integer NOT NULL,
    CONSTRAINT company_contact_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.company_manufacturerpart
(
    id integer NOT NULL DEFAULT nextval('company_manufacturerpart_id_seq'::regclass),
    "MPN" character varying(100) COLLATE pg_catalog."default",
    link character varying(200) COLLATE pg_catalog."default",
    description character varying(250) COLLATE pg_catalog."default",
    manufacturer_id integer,
    part_id integer NOT NULL,
    CONSTRAINT company_manufacturerpart_pkey PRIMARY KEY (id),
    CONSTRAINT company_manufacturerpart_part_id_manufacturer_id__7c735053_uniq UNIQUE (part_id, manufacturer_id, "MPN")
);

CREATE TABLE IF NOT EXISTS public.company_manufacturerpartattachment
(
    id integer NOT NULL DEFAULT nextval('company_manufacturerpartattachment_id_seq'::regclass),
    attachment character varying(100) COLLATE pg_catalog."default",
    link character varying(200) COLLATE pg_catalog."default",
    comment character varying(100) COLLATE pg_catalog."default" NOT NULL,
    upload_date date,
    manufacturer_part_id integer NOT NULL,
    user_id integer,
    CONSTRAINT company_manufacturerpartattachment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.company_manufacturerpartparameter
(
    id integer NOT NULL DEFAULT nextval('company_manufacturerpartparameter_id_seq'::regclass),
    name character varying(500) COLLATE pg_catalog."default" NOT NULL,
    value character varying(500) COLLATE pg_catalog."default" NOT NULL,
    units character varying(64) COLLATE pg_catalog."default",
    manufacturer_part_id integer NOT NULL,
    CONSTRAINT company_manufacturerpartparameter_pkey PRIMARY KEY (id),
    CONSTRAINT company_manufacturerpart_manufacturer_part_id_nam_67acf00e_uniq UNIQUE (manufacturer_part_id, name)
);

CREATE TABLE IF NOT EXISTS public.django_admin_log
(
    id integer NOT NULL DEFAULT nextval('django_admin_log_id_seq'::regclass),
    action_time timestamp with time zone NOT NULL,
    object_id text COLLATE pg_catalog."default",
    object_repr character varying(200) COLLATE pg_catalog."default" NOT NULL,
    action_flag smallint NOT NULL,
    change_message text COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_content_type
(
    id integer NOT NULL DEFAULT nextval('django_content_type_id_seq'::regclass),
    app_label character varying(100) COLLATE pg_catalog."default" NOT NULL,
    model character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT django_content_type_pkey PRIMARY KEY (id),
    CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model)
);

CREATE TABLE IF NOT EXISTS public.django_migrations
(
    id integer NOT NULL DEFAULT nextval('django_migrations_id_seq'::regclass),
    app character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    applied timestamp with time zone NOT NULL,
    CONSTRAINT django_migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_q_ormq
(
    id integer NOT NULL DEFAULT nextval('django_q_ormq_id_seq'::regclass),
    key character varying(100) COLLATE pg_catalog."default" NOT NULL,
    payload text COLLATE pg_catalog."default" NOT NULL,
    lock timestamp with time zone,
    CONSTRAINT django_q_ormq_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_q_schedule
(
    id integer NOT NULL DEFAULT nextval('django_q_schedule_id_seq'::regclass),
    func character varying(256) COLLATE pg_catalog."default" NOT NULL,
    hook character varying(256) COLLATE pg_catalog."default",
    args text COLLATE pg_catalog."default",
    kwargs text COLLATE pg_catalog."default",
    schedule_type character varying(1) COLLATE pg_catalog."default" NOT NULL,
    repeats integer NOT NULL,
    next_run timestamp with time zone,
    task character varying(100) COLLATE pg_catalog."default",
    name character varying(100) COLLATE pg_catalog."default",
    minutes smallint,
    cron character varying(100) COLLATE pg_catalog."default",
    cluster character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT django_q_schedule_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_q_task
(
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    func character varying(256) COLLATE pg_catalog."default" NOT NULL,
    hook character varying(256) COLLATE pg_catalog."default",
    args text COLLATE pg_catalog."default",
    kwargs text COLLATE pg_catalog."default",
    result text COLLATE pg_catalog."default",
    started timestamp with time zone NOT NULL,
    stopped timestamp with time zone NOT NULL,
    success boolean NOT NULL,
    id character varying(32) COLLATE pg_catalog."default" NOT NULL,
    "group" character varying(100) COLLATE pg_catalog."default",
    attempt_count integer NOT NULL,
    CONSTRAINT django_q_task_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_site
(
    id integer NOT NULL DEFAULT nextval('django_site_id_seq'::regclass),
    domain character varying(100) COLLATE pg_catalog."default" NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT django_site_pkey PRIMARY KEY (id),
    CONSTRAINT django_site_domain_a2e37b91_uniq UNIQUE (domain)
);

CREATE TABLE IF NOT EXISTS public.error_report_error
(
    id integer NOT NULL DEFAULT nextval('error_report_error_id_seq'::regclass),
    kind character varying(128) COLLATE pg_catalog."default",
    info text COLLATE pg_catalog."default" NOT NULL,
    data text COLLATE pg_catalog."default",
    path character varying(200) COLLATE pg_catalog."default",
    "when" timestamp with time zone NOT NULL,
    html text COLLATE pg_catalog."default",
    modified timestamp with time zone NOT NULL,
    CONSTRAINT error_report_error_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.exchange_exchangebackend
(
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    last_update timestamp with time zone NOT NULL,
    base_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT exchange_exchangebackend_pkey PRIMARY KEY (name)
);

CREATE TABLE IF NOT EXISTS public.exchange_rate
(
    id integer NOT NULL DEFAULT nextval('exchange_rate_id_seq'::regclass),
    currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    value numeric(20, 6) NOT NULL,
    backend_id character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT exchange_rate_pkey PRIMARY KEY (id),
    CONSTRAINT exchange_rate_currency_backend_id_c6037b21_uniq UNIQUE (currency, backend_id)
);

CREATE TABLE IF NOT EXISTS public.label_partlabel
(
    id integer NOT NULL DEFAULT nextval('label_partlabel_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default",
    label character varying(100) COLLATE pg_catalog."default" NOT NULL,
    enabled boolean NOT NULL,
    width double precision NOT NULL,
    height double precision NOT NULL,
    filename_pattern character varying(100) COLLATE pg_catalog."default" NOT NULL,
    filters character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT label_partlabel_pkey PRIMARY KEY (id),
    CONSTRAINT label_partlabel_label_key UNIQUE (label)
);

CREATE TABLE IF NOT EXISTS public.label_stockitemlabel
(
    id integer NOT NULL DEFAULT nextval('label_stockitemlabel_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default",
    label character varying(100) COLLATE pg_catalog."default" NOT NULL,
    filters character varying(250) COLLATE pg_catalog."default" NOT NULL,
    enabled boolean NOT NULL,
    height double precision NOT NULL,
    width double precision NOT NULL,
    filename_pattern character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT label_stockitemlabel_pkey PRIMARY KEY (id),
    CONSTRAINT label_stockitemlabel_label_f0cd84ad_uniq UNIQUE (label)
);

CREATE TABLE IF NOT EXISTS public.label_stocklocationlabel
(
    id integer NOT NULL DEFAULT nextval('label_stocklocationlabel_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default",
    label character varying(100) COLLATE pg_catalog."default" NOT NULL,
    filters character varying(250) COLLATE pg_catalog."default" NOT NULL,
    enabled boolean NOT NULL,
    height double precision NOT NULL,
    width double precision NOT NULL,
    filename_pattern character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT label_stocklocationlabel_pkey PRIMARY KEY (id),
    CONSTRAINT label_stocklocationlabel_label_63137c09_uniq UNIQUE (label)
);

CREATE TABLE IF NOT EXISTS public.order_purchaseorder
(
    id integer NOT NULL DEFAULT nextval('order_purchaseorder_id_seq'::regclass),
    reference character varying(64) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    creation_date date,
    issue_date date,
    notes text COLLATE pg_catalog."default",
    created_by_id integer,
    supplier_id integer,
    link character varying(200) COLLATE pg_catalog."default" NOT NULL,
    status integer NOT NULL,
    complete_date date,
    received_by_id integer,
    supplier_reference character varying(64) COLLATE pg_catalog."default" NOT NULL,
    target_date date,
    responsible_id integer,
    reference_int bigint NOT NULL,
    metadata jsonb,
    CONSTRAINT order_purchaseorder_pkey PRIMARY KEY (id),
    CONSTRAINT order_purchaseorder_reference_key UNIQUE (reference)
);

CREATE TABLE IF NOT EXISTS public.order_purchaseorderattachment
(
    id integer NOT NULL DEFAULT nextval('order_purchaseorderattachment_id_seq'::regclass),
    attachment character varying(100) COLLATE pg_catalog."default",
    comment character varying(100) COLLATE pg_catalog."default" NOT NULL,
    order_id integer NOT NULL,
    user_id integer,
    upload_date date,
    link character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT order_purchaseorderattachment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_purchaseorderextraline
(
    id integer NOT NULL DEFAULT nextval('order_purchaseorderextraline_id_seq'::regclass),
    quantity numeric(15, 5) NOT NULL,
    reference character varying(100) COLLATE pg_catalog."default" NOT NULL,
    notes character varying(500) COLLATE pg_catalog."default" NOT NULL,
    target_date date,
    context jsonb,
    price_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    price numeric(19, 6),
    order_id integer NOT NULL,
    CONSTRAINT order_purchaseorderextraline_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_purchaseorderlineitem
(
    id integer NOT NULL DEFAULT nextval('order_purchaseorderlineitem_id_seq'::regclass),
    quantity numeric(15, 5) NOT NULL,
    reference character varying(100) COLLATE pg_catalog."default" NOT NULL,
    received numeric(15, 5) NOT NULL,
    order_id integer NOT NULL,
    part_id integer,
    notes character varying(500) COLLATE pg_catalog."default" NOT NULL,
    purchase_price numeric(19, 6),
    purchase_price_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    destination_id integer,
    target_date date,
    CONSTRAINT order_purchaseorderlineitem_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_salesorder
(
    id integer NOT NULL DEFAULT nextval('order_salesorder_id_seq'::regclass),
    reference character varying(64) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    link character varying(200) COLLATE pg_catalog."default" NOT NULL,
    creation_date date,
    status integer NOT NULL,
    shipment_date date,
    notes text COLLATE pg_catalog."default",
    customer_reference character varying(64) COLLATE pg_catalog."default" NOT NULL,
    created_by_id integer,
    customer_id integer,
    shipped_by_id integer,
    target_date date,
    responsible_id integer,
    reference_int bigint NOT NULL,
    metadata jsonb,
    CONSTRAINT order_salesorder_pkey PRIMARY KEY (id),
    CONSTRAINT order_salesorder_reference_key UNIQUE (reference)
);

CREATE TABLE IF NOT EXISTS public.order_salesorderallocation
(
    id integer NOT NULL DEFAULT nextval('order_salesorderallocation_id_seq'::regclass),
    quantity numeric(15, 5) NOT NULL,
    item_id integer NOT NULL,
    line_id integer NOT NULL,
    shipment_id integer NOT NULL,
    CONSTRAINT order_salesorderallocation_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_salesorderattachment
(
    id integer NOT NULL DEFAULT nextval('order_salesorderattachment_id_seq'::regclass),
    attachment character varying(100) COLLATE pg_catalog."default",
    comment character varying(100) COLLATE pg_catalog."default" NOT NULL,
    order_id integer NOT NULL,
    user_id integer,
    upload_date date,
    link character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT order_salesorderattachment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_salesorderextraline
(
    id integer NOT NULL DEFAULT nextval('order_salesorderextraline_id_seq'::regclass),
    quantity numeric(15, 5) NOT NULL,
    reference character varying(100) COLLATE pg_catalog."default" NOT NULL,
    notes character varying(500) COLLATE pg_catalog."default" NOT NULL,
    target_date date,
    context jsonb,
    price_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    price numeric(19, 6),
    order_id integer NOT NULL,
    CONSTRAINT order_salesorderextraline_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_salesorderlineitem
(
    id integer NOT NULL DEFAULT nextval('order_salesorderlineitem_id_seq'::regclass),
    quantity numeric(15, 5) NOT NULL,
    reference character varying(100) COLLATE pg_catalog."default" NOT NULL,
    notes character varying(500) COLLATE pg_catalog."default" NOT NULL,
    order_id integer NOT NULL,
    part_id integer,
    sale_price numeric(19, 6),
    sale_price_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    shipped numeric(15, 5) NOT NULL,
    target_date date,
    CONSTRAINT order_salesorderlineitem_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_salesordershipment
(
    id integer NOT NULL DEFAULT nextval('order_salesordershipment_id_seq'::regclass),
    shipment_date date,
    reference character varying(100) COLLATE pg_catalog."default" NOT NULL,
    notes text COLLATE pg_catalog."default",
    checked_by_id integer,
    order_id integer NOT NULL,
    tracking_number character varying(100) COLLATE pg_catalog."default" NOT NULL,
    invoice_number character varying(100) COLLATE pg_catalog."default" NOT NULL,
    link character varying(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT order_salesordershipment_pkey PRIMARY KEY (id),
    CONSTRAINT order_salesordershipment_order_id_reference_0b2a76c1_uniq UNIQUE (order_id, reference)
);

CREATE TABLE IF NOT EXISTS public.otp_static_staticdevice
(
    id integer NOT NULL DEFAULT nextval('otp_static_staticdevice_id_seq'::regclass),
    name character varying(64) COLLATE pg_catalog."default" NOT NULL,
    confirmed boolean NOT NULL,
    user_id integer NOT NULL,
    throttling_failure_count integer NOT NULL,
    throttling_failure_timestamp timestamp with time zone,
    CONSTRAINT otp_static_staticdevice_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.otp_static_statictoken
(
    id integer NOT NULL DEFAULT nextval('otp_static_statictoken_id_seq'::regclass),
    token character varying(16) COLLATE pg_catalog."default" NOT NULL,
    device_id integer NOT NULL,
    CONSTRAINT otp_static_statictoken_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.otp_totp_totpdevice
(
    id integer NOT NULL DEFAULT nextval('otp_totp_totpdevice_id_seq'::regclass),
    name character varying(64) COLLATE pg_catalog."default" NOT NULL,
    confirmed boolean NOT NULL,
    key character varying(80) COLLATE pg_catalog."default" NOT NULL,
    step smallint NOT NULL,
    t0 bigint NOT NULL,
    digits smallint NOT NULL,
    tolerance smallint NOT NULL,
    drift smallint NOT NULL,
    last_t bigint NOT NULL,
    user_id integer NOT NULL,
    throttling_failure_count integer NOT NULL,
    throttling_failure_timestamp timestamp with time zone,
    CONSTRAINT otp_totp_totpdevice_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.part_bomitem
(
    id integer NOT NULL DEFAULT nextval('part_bomitem_id_seq'::regclass),
    quantity numeric(15, 5) NOT NULL,
    overage character varying(24) COLLATE pg_catalog."default" NOT NULL,
    note character varying(500) COLLATE pg_catalog."default" NOT NULL,
    part_id integer NOT NULL,
    sub_part_id integer NOT NULL,
    reference character varying(500) COLLATE pg_catalog."default" NOT NULL,
    checksum character varying(128) COLLATE pg_catalog."default" NOT NULL,
    optional boolean NOT NULL,
    inherited boolean NOT NULL,
    allow_variants boolean NOT NULL,
    consumable boolean NOT NULL,
    CONSTRAINT part_bomitem_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.part_bomitemsubstitute
(
    id integer NOT NULL DEFAULT nextval('part_bomitemsubstitute_id_seq'::regclass),
    bom_item_id integer NOT NULL,
    part_id integer NOT NULL,
    CONSTRAINT part_bomitemsubstitute_pkey PRIMARY KEY (id),
    CONSTRAINT part_bomitemsubstitute_part_id_bom_item_id_46b97ea2_uniq UNIQUE (part_id, bom_item_id)
);

CREATE TABLE IF NOT EXISTS public.part_part
(
    id integer NOT NULL DEFAULT nextval('part_part_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    keywords character varying(250) COLLATE pg_catalog."default",
    "IPN" character varying(100) COLLATE pg_catalog."default",
    link character varying(200) COLLATE pg_catalog."default",
    image character varying(100) COLLATE pg_catalog."default",
    minimum_stock integer NOT NULL,
    units character varying(20) COLLATE pg_catalog."default",
    trackable boolean NOT NULL,
    purchaseable boolean NOT NULL,
    salable boolean NOT NULL,
    active boolean NOT NULL,
    notes text COLLATE pg_catalog."default",
    bom_checksum character varying(128) COLLATE pg_catalog."default" NOT NULL,
    bom_checked_date date,
    bom_checked_by_id integer,
    category_id integer,
    default_location_id integer,
    default_supplier_id integer,
    is_template boolean NOT NULL,
    variant_of_id integer,
    assembly boolean NOT NULL,
    component boolean NOT NULL,
    virtual boolean NOT NULL,
    revision character varying(100) COLLATE pg_catalog."default",
    creation_date date,
    creation_user_id integer,
    responsible_id integer,
    level integer NOT NULL,
    lft integer NOT NULL,
    rght integer NOT NULL,
    tree_id integer NOT NULL,
    default_expiry integer NOT NULL,
    base_cost numeric(19, 6) NOT NULL,
    multiple integer NOT NULL,
    metadata jsonb,
    barcode_data character varying(500) COLLATE pg_catalog."default" NOT NULL,
    barcode_hash character varying(128) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT part_part_pkey PRIMARY KEY (id),
    CONSTRAINT unique_part UNIQUE (name, "IPN", revision)
);

CREATE TABLE IF NOT EXISTS public.part_partattachment
(
    id integer NOT NULL DEFAULT nextval('part_partattachment_id_seq'::regclass),
    attachment character varying(100) COLLATE pg_catalog."default",
    comment character varying(100) COLLATE pg_catalog."default" NOT NULL,
    part_id integer NOT NULL,
    user_id integer,
    upload_date date,
    link character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT part_partattachment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.part_partcategory
(
    id integer NOT NULL DEFAULT nextval('part_partcategory_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    default_keywords character varying(250) COLLATE pg_catalog."default",
    default_location_id integer,
    parent_id integer,
    level integer NOT NULL,
    lft integer NOT NULL,
    rght integer NOT NULL,
    tree_id integer NOT NULL,
    metadata jsonb,
    pathstring character varying(250) COLLATE pg_catalog."default" NOT NULL,
    icon character varying(100) COLLATE pg_catalog."default" NOT NULL,
    structural boolean NOT NULL,
    CONSTRAINT part_partcategory_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.part_partcategoryparametertemplate
(
    id integer NOT NULL DEFAULT nextval('part_partcategoryparametertemplate_id_seq'::regclass),
    default_value character varying(500) COLLATE pg_catalog."default" NOT NULL,
    category_id integer NOT NULL,
    parameter_template_id integer NOT NULL,
    CONSTRAINT part_partcategoryparametertemplate_pkey PRIMARY KEY (id),
    CONSTRAINT unique_category_parameter_template_pair UNIQUE (category_id, parameter_template_id)
);

CREATE TABLE IF NOT EXISTS public.part_partcategorystar
(
    id integer NOT NULL DEFAULT nextval('part_partcategorystar_id_seq'::regclass),
    category_id integer NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT part_partcategorystar_pkey PRIMARY KEY (id),
    CONSTRAINT part_partcategorystar_category_id_user_id_ea052d2d_uniq UNIQUE (category_id, user_id)
);

CREATE TABLE IF NOT EXISTS public.part_partinternalpricebreak
(
    id integer NOT NULL DEFAULT nextval('part_partinternalpricebreak_id_seq'::regclass),
    quantity numeric(15, 5) NOT NULL,
    price_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    price numeric(19, 6),
    part_id integer NOT NULL,
    CONSTRAINT part_partinternalpricebreak_pkey PRIMARY KEY (id),
    CONSTRAINT part_partinternalpricebreak_part_id_quantity_2f23db66_uniq UNIQUE (part_id, quantity)
);

CREATE TABLE IF NOT EXISTS public.part_partparameter
(
    id integer NOT NULL DEFAULT nextval('part_partparameter_id_seq'::regclass),
    data character varying(500) COLLATE pg_catalog."default" NOT NULL,
    part_id integer NOT NULL,
    template_id integer NOT NULL,
    CONSTRAINT part_partparameter_pkey PRIMARY KEY (id),
    CONSTRAINT part_partparameter_part_id_template_id_74280ad3_uniq UNIQUE (part_id, template_id)
);

CREATE TABLE IF NOT EXISTS public.part_partparametertemplate
(
    id integer NOT NULL DEFAULT nextval('part_partparametertemplate_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    units character varying(25) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT part_partparametertemplate_pkey PRIMARY KEY (id),
    CONSTRAINT part_partparametertemplate_name_890b9fc8_uniq UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.part_partpricing
(
    id integer NOT NULL DEFAULT nextval('part_partpricing_id_seq'::regclass),
    currency character varying(10) COLLATE pg_catalog."default" NOT NULL,
    updated timestamp with time zone NOT NULL,
    scheduled_for_update boolean NOT NULL,
    bom_cost_min_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    bom_cost_min numeric(19, 6),
    bom_cost_max_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    bom_cost_max numeric(19, 6),
    purchase_cost_min_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    purchase_cost_min numeric(19, 6),
    purchase_cost_max_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    purchase_cost_max numeric(19, 6),
    internal_cost_min_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    internal_cost_min numeric(19, 6),
    internal_cost_max_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    internal_cost_max numeric(19, 6),
    supplier_price_min_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    supplier_price_min numeric(19, 6),
    supplier_price_max_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    supplier_price_max numeric(19, 6),
    variant_cost_min_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    variant_cost_min numeric(19, 6),
    variant_cost_max_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    variant_cost_max numeric(19, 6),
    overall_min_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    overall_min numeric(19, 6),
    overall_max_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    overall_max numeric(19, 6),
    sale_price_min_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    sale_price_min numeric(19, 6),
    sale_price_max_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    sale_price_max numeric(19, 6),
    sale_history_min_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    sale_history_min numeric(19, 6),
    sale_history_max_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    sale_history_max numeric(19, 6),
    part_id integer NOT NULL,
    CONSTRAINT part_partpricing_pkey PRIMARY KEY (id),
    CONSTRAINT part_partpricing_part_id_key UNIQUE (part_id)
);

CREATE TABLE IF NOT EXISTS public.part_partrelated
(
    id integer NOT NULL DEFAULT nextval('part_partrelated_id_seq'::regclass),
    part_1_id integer NOT NULL,
    part_2_id integer NOT NULL,
    CONSTRAINT part_partrelated_pkey PRIMARY KEY (id),
    CONSTRAINT part_partrelated_part_1_id_part_2_id_0f725b72_uniq UNIQUE (part_1_id, part_2_id)
);

CREATE TABLE IF NOT EXISTS public.part_partsellpricebreak
(
    id integer NOT NULL DEFAULT nextval('part_partsellpricebreak_id_seq'::regclass),
    quantity numeric(15, 5) NOT NULL,
    part_id integer NOT NULL,
    price numeric(19, 6),
    price_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT part_partsellpricebreak_pkey PRIMARY KEY (id),
    CONSTRAINT part_partsellpricebreak_part_id_quantity_bd1a9901_uniq UNIQUE (part_id, quantity)
);

CREATE TABLE IF NOT EXISTS public.part_partstar
(
    id integer NOT NULL DEFAULT nextval('part_partstar_id_seq'::regclass),
    part_id integer NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT part_partstar_pkey PRIMARY KEY (id),
    CONSTRAINT part_partstar_part_id_user_id_3cffef67_uniq UNIQUE (part_id, user_id)
);

CREATE TABLE IF NOT EXISTS public.part_parttesttemplate
(
    id integer NOT NULL DEFAULT nextval('part_parttesttemplate_id_seq'::regclass),
    test_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    required boolean NOT NULL,
    part_id integer NOT NULL,
    description character varying(100) COLLATE pg_catalog."default",
    requires_attachment boolean NOT NULL,
    requires_value boolean NOT NULL,
    CONSTRAINT part_parttesttemplate_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.part_supplierpart
(
    id integer NOT NULL DEFAULT nextval('part_supplierpart_id_seq'::regclass),
    "SKU" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    link character varying(200) COLLATE pg_catalog."default",
    description character varying(250) COLLATE pg_catalog."default",
    note character varying(100) COLLATE pg_catalog."default",
    base_cost numeric(10, 3) NOT NULL,
    packaging character varying(50) COLLATE pg_catalog."default",
    multiple integer NOT NULL,
    part_id integer NOT NULL,
    supplier_id integer NOT NULL,
    manufacturer_part_id integer,
    availability_updated timestamp with time zone,
    available numeric(10, 3) NOT NULL,
    pack_size numeric(15, 5) NOT NULL,
    barcode_data character varying(500) COLLATE pg_catalog."default" NOT NULL,
    barcode_hash character varying(128) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT part_supplierpart_pkey PRIMARY KEY (id),
    CONSTRAINT "part_supplierpart_part_id_supplier_id_SKU_5a63ff75_uniq" UNIQUE (part_id, supplier_id, "SKU")
);

CREATE TABLE IF NOT EXISTS public.part_supplierpricebreak
(
    id integer NOT NULL DEFAULT nextval('part_supplierpricebreak_id_seq'::regclass),
    quantity numeric(15, 5) NOT NULL,
    part_id integer NOT NULL,
    price numeric(19, 6),
    price_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    updated timestamp with time zone,
    CONSTRAINT part_supplierpricebreak_pkey PRIMARY KEY (id),
    CONSTRAINT part_supplierpricebreak_part_id_quantity_502fe8d1_uniq UNIQUE (part_id, quantity)
);

CREATE TABLE IF NOT EXISTS public.plugin_notificationusersetting
(
    id integer NOT NULL DEFAULT nextval('plugin_notificationusersetting_id_seq'::regclass),
    key character varying(50) COLLATE pg_catalog."default" NOT NULL,
    value character varying(200) COLLATE pg_catalog."default" NOT NULL,
    method character varying(255) COLLATE pg_catalog."default" NOT NULL,
    user_id integer,
    CONSTRAINT plugin_notificationusersetting_pkey PRIMARY KEY (id),
    CONSTRAINT plugin_notificationusersetting_method_user_id_key_aada38de_uniq UNIQUE (method, user_id, key)
);

CREATE TABLE IF NOT EXISTS public.plugin_pluginconfig
(
    id integer NOT NULL DEFAULT nextval('plugin_pluginconfig_id_seq'::regclass),
    key character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default",
    active boolean NOT NULL,
    CONSTRAINT plugin_pluginconfig_pkey PRIMARY KEY (id),
    CONSTRAINT plugin_pluginconfig_key_key UNIQUE (key)
);

CREATE TABLE IF NOT EXISTS public.plugin_pluginsetting
(
    id integer NOT NULL DEFAULT nextval('plugin_pluginsetting_id_seq'::regclass),
    key character varying(50) COLLATE pg_catalog."default" NOT NULL,
    value character varying(200) COLLATE pg_catalog."default" NOT NULL,
    plugin_id integer NOT NULL,
    CONSTRAINT plugin_pluginsetting_pkey PRIMARY KEY (id),
    CONSTRAINT plugin_pluginsetting_plugin_id_key_e49485b1_uniq UNIQUE (plugin_id, key)
);

CREATE TABLE IF NOT EXISTS public.report_billofmaterialsreport
(
    id integer NOT NULL DEFAULT nextval('report_billofmaterialsreport_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    template character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    revision integer NOT NULL,
    enabled boolean NOT NULL,
    filters character varying(250) COLLATE pg_catalog."default" NOT NULL,
    filename_pattern character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT report_billofmaterialsreport_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.report_buildreport
(
    id integer NOT NULL DEFAULT nextval('report_buildreport_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    template character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    revision integer NOT NULL,
    enabled boolean NOT NULL,
    filters character varying(250) COLLATE pg_catalog."default" NOT NULL,
    filename_pattern character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT report_buildreport_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.report_purchaseorderreport
(
    id integer NOT NULL DEFAULT nextval('report_purchaseorderreport_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    template character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    revision integer NOT NULL,
    enabled boolean NOT NULL,
    filters character varying(250) COLLATE pg_catalog."default" NOT NULL,
    filename_pattern character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT report_purchaseorderreport_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.report_reportasset
(
    id integer NOT NULL DEFAULT nextval('report_reportasset_id_seq'::regclass),
    asset character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT report_reportasset_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.report_reportsnippet
(
    id integer NOT NULL DEFAULT nextval('report_reportsnippet_id_seq'::regclass),
    snippet character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT report_reportsnippet_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.report_salesorderreport
(
    id integer NOT NULL DEFAULT nextval('report_salesorderreport_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    template character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    revision integer NOT NULL,
    enabled boolean NOT NULL,
    filters character varying(250) COLLATE pg_catalog."default" NOT NULL,
    filename_pattern character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT report_salesorderreport_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.report_testreport
(
    id integer NOT NULL DEFAULT nextval('report_testreport_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    template character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    filters character varying(250) COLLATE pg_catalog."default" NOT NULL,
    enabled boolean NOT NULL,
    revision integer NOT NULL,
    include_installed boolean NOT NULL,
    filename_pattern character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT report_testreport_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.socialaccount_socialaccount
(
    id integer NOT NULL DEFAULT nextval('socialaccount_socialaccount_id_seq'::regclass),
    provider character varying(30) COLLATE pg_catalog."default" NOT NULL,
    uid character varying(191) COLLATE pg_catalog."default" NOT NULL,
    last_login timestamp with time zone NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    extra_data text COLLATE pg_catalog."default" NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT socialaccount_socialaccount_pkey PRIMARY KEY (id),
    CONSTRAINT socialaccount_socialaccount_provider_uid_fc810c6e_uniq UNIQUE (provider, uid)
);

CREATE TABLE IF NOT EXISTS public.socialaccount_socialapp
(
    id integer NOT NULL DEFAULT nextval('socialaccount_socialapp_id_seq'::regclass),
    provider character varying(30) COLLATE pg_catalog."default" NOT NULL,
    name character varying(40) COLLATE pg_catalog."default" NOT NULL,
    client_id character varying(191) COLLATE pg_catalog."default" NOT NULL,
    secret character varying(191) COLLATE pg_catalog."default" NOT NULL,
    key character varying(191) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT socialaccount_socialapp_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.socialaccount_socialapp_sites
(
    id integer NOT NULL DEFAULT nextval('socialaccount_socialapp_sites_id_seq'::regclass),
    socialapp_id integer NOT NULL,
    site_id integer NOT NULL,
    CONSTRAINT socialaccount_socialapp_sites_pkey PRIMARY KEY (id),
    CONSTRAINT socialaccount_socialapp__socialapp_id_site_id_71a9a768_uniq UNIQUE (socialapp_id, site_id)
);

CREATE TABLE IF NOT EXISTS public.socialaccount_socialtoken
(
    id integer NOT NULL DEFAULT nextval('socialaccount_socialtoken_id_seq'::regclass),
    token text COLLATE pg_catalog."default" NOT NULL,
    token_secret text COLLATE pg_catalog."default" NOT NULL,
    expires_at timestamp with time zone,
    account_id integer NOT NULL,
    app_id integer NOT NULL,
    CONSTRAINT socialaccount_socialtoken_pkey PRIMARY KEY (id),
    CONSTRAINT socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq UNIQUE (app_id, account_id)
);

CREATE TABLE IF NOT EXISTS public.stock_stockitem
(
    id integer NOT NULL DEFAULT nextval('stock_stockitem_id_seq'::regclass),
    serial character varying(100) COLLATE pg_catalog."default",
    link character varying(200) COLLATE pg_catalog."default" NOT NULL,
    batch character varying(100) COLLATE pg_catalog."default",
    quantity numeric(15, 5) NOT NULL,
    updated date,
    stocktake_date date,
    review_needed boolean NOT NULL,
    delete_on_deplete boolean NOT NULL,
    status integer NOT NULL,
    notes text COLLATE pg_catalog."default",
    belongs_to_id integer,
    location_id integer,
    part_id integer NOT NULL,
    stocktake_user_id integer,
    supplier_part_id integer,
    purchase_order_id integer,
    build_id integer,
    level integer NOT NULL,
    lft integer NOT NULL,
    parent_id integer,
    rght integer NOT NULL,
    tree_id integer NOT NULL,
    sales_order_id integer,
    customer_id integer,
    is_building boolean NOT NULL,
    purchase_price numeric(19, 6),
    purchase_price_currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    expiry_date date,
    owner_id integer,
    packaging character varying(50) COLLATE pg_catalog."default",
    serial_int integer NOT NULL,
    metadata jsonb,
    barcode_data character varying(500) COLLATE pg_catalog."default" NOT NULL,
    barcode_hash character varying(128) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT stock_stockitem_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.stock_stockitemattachment
(
    id integer NOT NULL DEFAULT nextval('stock_stockitemattachment_id_seq'::regclass),
    attachment character varying(100) COLLATE pg_catalog."default",
    comment character varying(100) COLLATE pg_catalog."default" NOT NULL,
    stock_item_id integer NOT NULL,
    user_id integer,
    upload_date date,
    link character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT stock_stockitemattachment_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.stock_stockitemtestresult
(
    id integer NOT NULL DEFAULT nextval('stock_stockitemtestresult_id_seq'::regclass),
    test character varying(100) COLLATE pg_catalog."default" NOT NULL,
    result boolean NOT NULL,
    value character varying(500) COLLATE pg_catalog."default" NOT NULL,
    date timestamp with time zone NOT NULL,
    attachment character varying(100) COLLATE pg_catalog."default",
    stock_item_id integer NOT NULL,
    user_id integer,
    notes character varying(500) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT stock_stockitemtestresult_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.stock_stockitemtracking
(
    id integer NOT NULL DEFAULT nextval('stock_stockitemtracking_id_seq'::regclass),
    date timestamp with time zone NOT NULL,
    notes character varying(512) COLLATE pg_catalog."default",
    item_id integer NOT NULL,
    user_id integer,
    deltas jsonb,
    tracking_type integer NOT NULL,
    CONSTRAINT stock_stockitemtracking_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.stock_stocklocation
(
    id integer NOT NULL DEFAULT nextval('stock_stocklocation_id_seq'::regclass),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(250) COLLATE pg_catalog."default" NOT NULL,
    parent_id integer,
    level integer NOT NULL,
    lft integer NOT NULL,
    rght integer NOT NULL,
    tree_id integer NOT NULL,
    owner_id integer,
    metadata jsonb,
    pathstring character varying(250) COLLATE pg_catalog."default" NOT NULL,
    icon character varying(100) COLLATE pg_catalog."default" NOT NULL,
    barcode_data character varying(500) COLLATE pg_catalog."default" NOT NULL,
    barcode_hash character varying(128) COLLATE pg_catalog."default" NOT NULL,
    structural boolean NOT NULL,
    CONSTRAINT stock_stocklocation_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_sessions_session
(
    session_key character varying(40) COLLATE pg_catalog."default" NOT NULL,
    session_data text COLLATE pg_catalog."default" NOT NULL,
    expire_date timestamp with time zone NOT NULL,
    user_agent character varying(200) COLLATE pg_catalog."default",
    last_activity timestamp with time zone NOT NULL,
    ip inet,
    user_id integer,
    CONSTRAINT user_sessions_session_pkey PRIMARY KEY (session_key)
);

CREATE TABLE IF NOT EXISTS public.users_owner
(
    id integer NOT NULL DEFAULT nextval('users_owner_id_seq'::regclass),
    owner_id integer,
    owner_type_id integer,
    CONSTRAINT users_owner_pkey PRIMARY KEY (id),
    CONSTRAINT unique_owner UNIQUE (owner_type_id, owner_id)
);

CREATE TABLE IF NOT EXISTS public.users_ruleset
(
    id integer NOT NULL DEFAULT nextval('users_ruleset_id_seq'::regclass),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    can_view boolean NOT NULL,
    can_add boolean NOT NULL,
    can_change boolean NOT NULL,
    can_delete boolean NOT NULL,
    group_id integer NOT NULL,
    CONSTRAINT users_ruleset_pkey PRIMARY KEY (id),
    CONSTRAINT users_ruleset_name_group_id_129b730d_uniq UNIQUE (name, group_id)
);

ALTER TABLE IF EXISTS public.account_emailaddress
    ADD CONSTRAINT account_emailaddress_user_id_2c513194_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS account_emailaddress_user_id_2c513194
    ON public.account_emailaddress(user_id);


ALTER TABLE IF EXISTS public.account_emailconfirmation
    ADD CONSTRAINT account_emailconfirm_email_address_id_5b7f8c58_fk_account_e FOREIGN KEY (email_address_id)
    REFERENCES public.account_emailaddress (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS account_emailconfirmation_email_address_id_5b7f8c58
    ON public.account_emailconfirmation(email_address_id);


ALTER TABLE IF EXISTS public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id)
    REFERENCES public.auth_permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_group_permissions_permission_id_84c5c92e
    ON public.auth_group_permissions(permission_id);


ALTER TABLE IF EXISTS public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_group_permissions_group_id_b120cbf9
    ON public.auth_group_permissions(group_id);


ALTER TABLE IF EXISTS public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_permission_content_type_id_2f476e4b
    ON public.auth_permission(content_type_id);


ALTER TABLE IF EXISTS public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_groups_group_id_97559544
    ON public.auth_user_groups(group_id);


ALTER TABLE IF EXISTS public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_groups_user_id_6a12ed8b
    ON public.auth_user_groups(user_id);


ALTER TABLE IF EXISTS public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id)
    REFERENCES public.auth_permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_user_permissions_permission_id_1fbb5f2c
    ON public.auth_user_user_permissions(permission_id);


ALTER TABLE IF EXISTS public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_user_permissions_user_id_a95ead1b
    ON public.auth_user_user_permissions(user_id);


ALTER TABLE IF EXISTS public.authtoken_token
    ADD CONSTRAINT authtoken_token_user_id_35299eff_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS authtoken_token_user_id_key
    ON public.authtoken_token(user_id);


ALTER TABLE IF EXISTS public.build_build
    ADD CONSTRAINT build_build_completed_by_id_6d8274af_fk_auth_user_id FOREIGN KEY (completed_by_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_build_completed_by_id_6d8274af
    ON public.build_build(completed_by_id);


ALTER TABLE IF EXISTS public.build_build
    ADD CONSTRAINT build_build_destination_id_1b885edf_fk_stock_stocklocation_id FOREIGN KEY (destination_id)
    REFERENCES public.stock_stocklocation (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_build_destination_id_1b885edf
    ON public.build_build(destination_id);


ALTER TABLE IF EXISTS public.build_build
    ADD CONSTRAINT build_build_issued_by_id_a0427f3c_fk_auth_user_id FOREIGN KEY (issued_by_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_build_issued_by_id_a0427f3c
    ON public.build_build(issued_by_id);


ALTER TABLE IF EXISTS public.build_build
    ADD CONSTRAINT build_build_parent_id_9a1ef723_fk_build_build_id FOREIGN KEY (parent_id)
    REFERENCES public.build_build (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_build_parent_id_9a1ef723
    ON public.build_build(parent_id);


ALTER TABLE IF EXISTS public.build_build
    ADD CONSTRAINT build_build_part_id_de034254_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_build_part_id_de034254
    ON public.build_build(part_id);


ALTER TABLE IF EXISTS public.build_build
    ADD CONSTRAINT build_build_responsible_id_49af6fa1_fk_users_owner_id FOREIGN KEY (responsible_id)
    REFERENCES public.users_owner (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_build_responsible_id_49af6fa1
    ON public.build_build(responsible_id);


ALTER TABLE IF EXISTS public.build_build
    ADD CONSTRAINT build_build_sales_order_id_5ea49fff_fk_order_salesorder_id FOREIGN KEY (sales_order_id)
    REFERENCES public.order_salesorder (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_build_sales_order_id_5ea49fff
    ON public.build_build(sales_order_id);


ALTER TABLE IF EXISTS public.build_build
    ADD CONSTRAINT build_build_take_from_id_3b071c1b_fk_stock_stocklocation_id FOREIGN KEY (take_from_id)
    REFERENCES public.stock_stocklocation (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_build_take_from_id_3b071c1b
    ON public.build_build(take_from_id);


ALTER TABLE IF EXISTS public.build_builditem
    ADD CONSTRAINT build_builditem_bom_item_id_3ad19fa4_fk_part_bomitem_id FOREIGN KEY (bom_item_id)
    REFERENCES public.part_bomitem (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_builditem_bom_item_id_3ad19fa4
    ON public.build_builditem(bom_item_id);


ALTER TABLE IF EXISTS public.build_builditem
    ADD CONSTRAINT build_builditem_build_id_85f0b52a_fk_build_build_id FOREIGN KEY (build_id)
    REFERENCES public.build_build (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_builditem_build_id_85f0b52a
    ON public.build_builditem(build_id);


ALTER TABLE IF EXISTS public.build_builditem
    ADD CONSTRAINT build_builditem_install_into_id_f4efa78a_fk_stock_stockitem_id FOREIGN KEY (install_into_id)
    REFERENCES public.stock_stockitem (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_builditem_install_into_id_f4efa78a
    ON public.build_builditem(install_into_id);


ALTER TABLE IF EXISTS public.build_builditem
    ADD CONSTRAINT build_builditem_stock_item_id_ec4665bb_fk_stock_stockitem_id FOREIGN KEY (stock_item_id)
    REFERENCES public.stock_stockitem (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_builditem_stock_item_id_ec4665bb
    ON public.build_builditem(stock_item_id);


ALTER TABLE IF EXISTS public.build_buildorderattachment
    ADD CONSTRAINT build_buildorderattachment_build_id_36c40604_fk_build_build_id FOREIGN KEY (build_id)
    REFERENCES public.build_build (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_buildorderattachment_build_id_36c40604
    ON public.build_buildorderattachment(build_id);


ALTER TABLE IF EXISTS public.build_buildorderattachment
    ADD CONSTRAINT build_buildorderattachment_user_id_78b99c16_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS build_buildorderattachment_user_id_78b99c16
    ON public.build_buildorderattachment(user_id);


ALTER TABLE IF EXISTS public.common_inventreeusersetting
    ADD CONSTRAINT common_inventreeusersetting_user_id_fa74a403_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS common_inventreeusersetting_user_id_fa74a403
    ON public.common_inventreeusersetting(user_id);


ALTER TABLE IF EXISTS public.common_notificationmessage
    ADD CONSTRAINT common_notificationm_source_content_type__17935bc3_fk_django_co FOREIGN KEY (source_content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS common_notificationmessage_source_content_type_id_17935bc3
    ON public.common_notificationmessage(source_content_type_id);


ALTER TABLE IF EXISTS public.common_notificationmessage
    ADD CONSTRAINT common_notificationm_target_content_type__e4b576d3_fk_django_co FOREIGN KEY (target_content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS common_notificationmessage_target_content_type_id_e4b576d3
    ON public.common_notificationmessage(target_content_type_id);


ALTER TABLE IF EXISTS public.common_notificationmessage
    ADD CONSTRAINT common_notificationmessage_user_id_4b3b9ae8_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS common_notificationmessage_user_id_4b3b9ae8
    ON public.common_notificationmessage(user_id);


ALTER TABLE IF EXISTS public.common_webhookendpoint
    ADD CONSTRAINT common_webhookendpoint_user_id_50166018_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS common_webhookendpoint_user_id_50166018
    ON public.common_webhookendpoint(user_id);


ALTER TABLE IF EXISTS public.common_webhookmessage
    ADD CONSTRAINT common_webhookmessag_endpoint_id_f6bc7499_fk_common_we FOREIGN KEY (endpoint_id)
    REFERENCES public.common_webhookendpoint (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS common_webhookmessage_endpoint_id_f6bc7499
    ON public.common_webhookmessage(endpoint_id);


ALTER TABLE IF EXISTS public.company_contact
    ADD CONSTRAINT company_contact_company_id_852620e3_fk_company_company_id FOREIGN KEY (company_id)
    REFERENCES public.company_company (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS company_contact_company_id_852620e3
    ON public.company_contact(company_id);


ALTER TABLE IF EXISTS public.company_manufacturerpart
    ADD CONSTRAINT company_manufacturer_manufacturer_id_1c61e99f_fk_company_c FOREIGN KEY (manufacturer_id)
    REFERENCES public.company_company (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS company_manufacturerpart_manufacturer_id_1c61e99f
    ON public.company_manufacturerpart(manufacturer_id);


ALTER TABLE IF EXISTS public.company_manufacturerpart
    ADD CONSTRAINT company_manufacturerpart_part_id_1b9bc349_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS company_manufacturerpart_part_id_1b9bc349
    ON public.company_manufacturerpart(part_id);


ALTER TABLE IF EXISTS public.company_manufacturerpartattachment
    ADD CONSTRAINT company_manufacturer_manufacturer_part_id_8eaa0133_fk_company_m FOREIGN KEY (manufacturer_part_id)
    REFERENCES public.company_manufacturerpart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS company_manufacturerpartat_manufacturer_part_id_8eaa0133
    ON public.company_manufacturerpartattachment(manufacturer_part_id);


ALTER TABLE IF EXISTS public.company_manufacturerpartattachment
    ADD CONSTRAINT company_manufacturer_user_id_6ad54564_fk_auth_user FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS company_manufacturerpartattachment_user_id_6ad54564
    ON public.company_manufacturerpartattachment(user_id);


ALTER TABLE IF EXISTS public.company_manufacturerpartparameter
    ADD CONSTRAINT company_manufacturer_manufacturer_part_id_dfd36c41_fk_company_m FOREIGN KEY (manufacturer_part_id)
    REFERENCES public.company_manufacturerpart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS company_manufacturerpartparameter_manufacturer_part_id_dfd36c41
    ON public.company_manufacturerpartparameter(manufacturer_part_id);


ALTER TABLE IF EXISTS public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS django_admin_log_content_type_id_c4bce8eb
    ON public.django_admin_log(content_type_id);


ALTER TABLE IF EXISTS public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS django_admin_log_user_id_c564eba6
    ON public.django_admin_log(user_id);


ALTER TABLE IF EXISTS public.exchange_rate
    ADD CONSTRAINT exchange_rate_backend_id_d57e3a62_fk_exchange_ FOREIGN KEY (backend_id)
    REFERENCES public.exchange_exchangebackend (name) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS exchange_rate_backend_id_d57e3a62_like
    ON public.exchange_rate(backend_id);


ALTER TABLE IF EXISTS public.order_purchaseorder
    ADD CONSTRAINT order_purchaseorder_created_by_id_2766f843_fk_auth_user_id FOREIGN KEY (created_by_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_purchaseorder_created_by_id_2766f843
    ON public.order_purchaseorder(created_by_id);


ALTER TABLE IF EXISTS public.order_purchaseorder
    ADD CONSTRAINT order_purchaseorder_received_by_id_8ea8270b_fk_auth_user_id FOREIGN KEY (received_by_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_purchaseorder_received_by_id_8ea8270b
    ON public.order_purchaseorder(received_by_id);


ALTER TABLE IF EXISTS public.order_purchaseorder
    ADD CONSTRAINT order_purchaseorder_responsible_id_3ce611b8_fk_users_owner_id FOREIGN KEY (responsible_id)
    REFERENCES public.users_owner (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_purchaseorder_responsible_id_3ce611b8
    ON public.order_purchaseorder(responsible_id);


ALTER TABLE IF EXISTS public.order_purchaseorder
    ADD CONSTRAINT order_purchaseorder_supplier_id_dafda74c_fk_company_company_id FOREIGN KEY (supplier_id)
    REFERENCES public.company_company (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_purchaseorder_supplier_id_dafda74c
    ON public.order_purchaseorder(supplier_id);


ALTER TABLE IF EXISTS public.order_purchaseorderattachment
    ADD CONSTRAINT order_purchaseordera_order_id_bfa62e6e_fk_order_pur FOREIGN KEY (order_id)
    REFERENCES public.order_purchaseorder (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_purchaseorderattachment_order_id_bfa62e6e
    ON public.order_purchaseorderattachment(order_id);


ALTER TABLE IF EXISTS public.order_purchaseorderattachment
    ADD CONSTRAINT order_purchaseorderattachment_user_id_cccbd2b2_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_purchaseorderattachment_user_id_cccbd2b2
    ON public.order_purchaseorderattachment(user_id);


ALTER TABLE IF EXISTS public.order_purchaseorderextraline
    ADD CONSTRAINT order_purchaseordere_order_id_aa106bf9_fk_order_pur FOREIGN KEY (order_id)
    REFERENCES public.order_purchaseorder (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_purchaseorderextraline_order_id_aa106bf9
    ON public.order_purchaseorderextraline(order_id);


ALTER TABLE IF EXISTS public.order_purchaseorderlineitem
    ADD CONSTRAINT order_purchaseorderl_destination_id_9c9ac5aa_fk_stock_sto FOREIGN KEY (destination_id)
    REFERENCES public.stock_stocklocation (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_purchaseorderlineitem_destination_id_9c9ac5aa
    ON public.order_purchaseorderlineitem(destination_id);


ALTER TABLE IF EXISTS public.order_purchaseorderlineitem
    ADD CONSTRAINT order_purchaseorderl_order_id_04c66f05_fk_order_pur FOREIGN KEY (order_id)
    REFERENCES public.order_purchaseorder (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_purchaseorderlineitem_order_id_04c66f05
    ON public.order_purchaseorderlineitem(order_id);


ALTER TABLE IF EXISTS public.order_purchaseorderlineitem
    ADD CONSTRAINT order_purchaseorderl_part_id_e2d39c35_fk_part_supp FOREIGN KEY (part_id)
    REFERENCES public.part_supplierpart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_purchaseorderlineitem_part_id_e2d39c35
    ON public.order_purchaseorderlineitem(part_id);


ALTER TABLE IF EXISTS public.order_salesorder
    ADD CONSTRAINT order_salesorder_created_by_id_1d505e87_fk_auth_user_id FOREIGN KEY (created_by_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesorder_created_by_id_1d505e87
    ON public.order_salesorder(created_by_id);


ALTER TABLE IF EXISTS public.order_salesorder
    ADD CONSTRAINT order_salesorder_customer_id_4af66abf_fk_company_company_id FOREIGN KEY (customer_id)
    REFERENCES public.company_company (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesorder_customer_id_4af66abf
    ON public.order_salesorder(customer_id);


ALTER TABLE IF EXISTS public.order_salesorder
    ADD CONSTRAINT order_salesorder_responsible_id_9baf98e3_fk_users_owner_id FOREIGN KEY (responsible_id)
    REFERENCES public.users_owner (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesorder_responsible_id_9baf98e3
    ON public.order_salesorder(responsible_id);


ALTER TABLE IF EXISTS public.order_salesorder
    ADD CONSTRAINT order_salesorder_shipped_by_id_cb5d079a_fk_auth_user_id FOREIGN KEY (shipped_by_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesorder_shipped_by_id_cb5d079a
    ON public.order_salesorder(shipped_by_id);


ALTER TABLE IF EXISTS public.order_salesorderallocation
    ADD CONSTRAINT order_salesorderallo_item_id_2a5c092f_fk_stock_sto FOREIGN KEY (item_id)
    REFERENCES public.stock_stockitem (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesorderallocation_item_id_2a5c092f
    ON public.order_salesorderallocation(item_id);


ALTER TABLE IF EXISTS public.order_salesorderallocation
    ADD CONSTRAINT order_salesorderallo_line_id_91c23327_fk_order_sal FOREIGN KEY (line_id)
    REFERENCES public.order_salesorderlineitem (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesorderallocation_line_id_91c23327
    ON public.order_salesorderallocation(line_id);


ALTER TABLE IF EXISTS public.order_salesorderallocation
    ADD CONSTRAINT order_salesorderallo_shipment_id_48b7bae7_fk_order_sal FOREIGN KEY (shipment_id)
    REFERENCES public.order_salesordershipment (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesorderallocation_shipment_id_48b7bae7
    ON public.order_salesorderallocation(shipment_id);


ALTER TABLE IF EXISTS public.order_salesorderattachment
    ADD CONSTRAINT order_salesorderatta_order_id_66d0e981_fk_order_sal FOREIGN KEY (order_id)
    REFERENCES public.order_salesorder (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesorderattachment_order_id_66d0e981
    ON public.order_salesorderattachment(order_id);


ALTER TABLE IF EXISTS public.order_salesorderattachment
    ADD CONSTRAINT order_salesorderattachment_user_id_e3e10447_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesorderattachment_user_id_e3e10447
    ON public.order_salesorderattachment(user_id);


ALTER TABLE IF EXISTS public.order_salesorderextraline
    ADD CONSTRAINT order_salesorderextr_order_id_07fad15c_fk_order_sal FOREIGN KEY (order_id)
    REFERENCES public.order_salesorder (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesorderextraline_order_id_07fad15c
    ON public.order_salesorderextraline(order_id);


ALTER TABLE IF EXISTS public.order_salesorderlineitem
    ADD CONSTRAINT order_salesorderline_order_id_0b95f54d_fk_order_sal FOREIGN KEY (order_id)
    REFERENCES public.order_salesorder (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesorderlineitem_order_id_0b95f54d
    ON public.order_salesorderlineitem(order_id);


ALTER TABLE IF EXISTS public.order_salesorderlineitem
    ADD CONSTRAINT order_salesorderlineitem_part_id_589eb5de_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesorderlineitem_part_id_589eb5de
    ON public.order_salesorderlineitem(part_id);


ALTER TABLE IF EXISTS public.order_salesordershipment
    ADD CONSTRAINT order_salesordership_order_id_a8ee0056_fk_order_sal FOREIGN KEY (order_id)
    REFERENCES public.order_salesorder (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesordershipment_order_id_a8ee0056
    ON public.order_salesordershipment(order_id);


ALTER TABLE IF EXISTS public.order_salesordershipment
    ADD CONSTRAINT order_salesordershipment_checked_by_id_c5cb6faf_fk_auth_user_id FOREIGN KEY (checked_by_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS order_salesordershipment_checked_by_id_c5cb6faf
    ON public.order_salesordershipment(checked_by_id);


ALTER TABLE IF EXISTS public.otp_static_staticdevice
    ADD CONSTRAINT otp_static_staticdevice_user_id_7f9cff2b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS otp_static_staticdevice_user_id_7f9cff2b
    ON public.otp_static_staticdevice(user_id);


ALTER TABLE IF EXISTS public.otp_static_statictoken
    ADD CONSTRAINT otp_static_statictok_device_id_74b7c7d1_fk_otp_stati FOREIGN KEY (device_id)
    REFERENCES public.otp_static_staticdevice (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS otp_static_statictoken_device_id_74b7c7d1
    ON public.otp_static_statictoken(device_id);


ALTER TABLE IF EXISTS public.otp_totp_totpdevice
    ADD CONSTRAINT otp_totp_totpdevice_user_id_0fb18292_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS otp_totp_totpdevice_user_id_0fb18292
    ON public.otp_totp_totpdevice(user_id);


ALTER TABLE IF EXISTS public.part_bomitem
    ADD CONSTRAINT part_bomitem_part_id_0707d333_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_bomitem_part_id_0707d333
    ON public.part_bomitem(part_id);


ALTER TABLE IF EXISTS public.part_bomitem
    ADD CONSTRAINT part_bomitem_sub_part_id_c0feb44f_fk_part_part_id FOREIGN KEY (sub_part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_bomitem_sub_part_id_c0feb44f
    ON public.part_bomitem(sub_part_id);


ALTER TABLE IF EXISTS public.part_bomitemsubstitute
    ADD CONSTRAINT part_bomitemsubstitute_bom_item_id_ebe7a540_fk_part_bomitem_id FOREIGN KEY (bom_item_id)
    REFERENCES public.part_bomitem (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_bomitemsubstitute_bom_item_id_ebe7a540
    ON public.part_bomitemsubstitute(bom_item_id);


ALTER TABLE IF EXISTS public.part_bomitemsubstitute
    ADD CONSTRAINT part_bomitemsubstitute_part_id_b4d1ba7e_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_bomitemsubstitute_part_id_b4d1ba7e
    ON public.part_bomitemsubstitute(part_id);


ALTER TABLE IF EXISTS public.part_part
    ADD CONSTRAINT part_part_bom_checked_by_id_7c47203e_fk_auth_user_id FOREIGN KEY (bom_checked_by_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_part_bom_checked_by_id_7c47203e
    ON public.part_part(bom_checked_by_id);


ALTER TABLE IF EXISTS public.part_part
    ADD CONSTRAINT part_part_category_id_706d5f2b_fk_part_partcategory_id FOREIGN KEY (category_id)
    REFERENCES public.part_partcategory (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_part_category_id_706d5f2b
    ON public.part_part(category_id);


ALTER TABLE IF EXISTS public.part_part
    ADD CONSTRAINT part_part_creation_user_id_d2d15fb4_fk_auth_user_id FOREIGN KEY (creation_user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_part_creation_user_id_d2d15fb4
    ON public.part_part(creation_user_id);


ALTER TABLE IF EXISTS public.part_part
    ADD CONSTRAINT part_part_default_location_id_6ed47d96_fk_stock_sto FOREIGN KEY (default_location_id)
    REFERENCES public.stock_stocklocation (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_part_default_location_id_6ed47d96
    ON public.part_part(default_location_id);


ALTER TABLE IF EXISTS public.part_part
    ADD CONSTRAINT part_part_default_supplier_id_c17b0504_fk_part_supplierpart_id FOREIGN KEY (default_supplier_id)
    REFERENCES public.part_supplierpart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_part_default_supplier_id_c17b0504
    ON public.part_part(default_supplier_id);


ALTER TABLE IF EXISTS public.part_part
    ADD CONSTRAINT part_part_responsible_id_114b9156_fk_auth_user_id FOREIGN KEY (responsible_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_part_responsible_id_114b9156
    ON public.part_part(responsible_id);


ALTER TABLE IF EXISTS public.part_part
    ADD CONSTRAINT part_part_variant_of_id_1e7426ae_fk_part_part_id FOREIGN KEY (variant_of_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_part_variant_of_id_1e7426ae
    ON public.part_part(variant_of_id);


ALTER TABLE IF EXISTS public.part_partattachment
    ADD CONSTRAINT part_partattachment_part_id_919e6589_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partattachment_part_id_919e6589
    ON public.part_partattachment(part_id);


ALTER TABLE IF EXISTS public.part_partattachment
    ADD CONSTRAINT part_partattachment_user_id_4bd30ef5_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partattachment_user_id_4bd30ef5
    ON public.part_partattachment(user_id);


ALTER TABLE IF EXISTS public.part_partcategory
    ADD CONSTRAINT part_partcategory_default_location_id_b77b13cc_fk_stock_sto FOREIGN KEY (default_location_id)
    REFERENCES public.stock_stocklocation (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partcategory_default_location_id_b77b13cc
    ON public.part_partcategory(default_location_id);


ALTER TABLE IF EXISTS public.part_partcategory
    ADD CONSTRAINT part_partcategory_parent_id_ba19e587_fk_part_partcategory_id FOREIGN KEY (parent_id)
    REFERENCES public.part_partcategory (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partcategory_parent_id_ba19e587
    ON public.part_partcategory(parent_id);


ALTER TABLE IF EXISTS public.part_partcategoryparametertemplate
    ADD CONSTRAINT part_partcategorypar_category_id_e231ed26_fk_part_part FOREIGN KEY (category_id)
    REFERENCES public.part_partcategory (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partcategoryparametertemplate_category_id_e231ed26
    ON public.part_partcategoryparametertemplate(category_id);


ALTER TABLE IF EXISTS public.part_partcategoryparametertemplate
    ADD CONSTRAINT part_partcategorypar_parameter_template_i_23cd836c_fk_part_part FOREIGN KEY (parameter_template_id)
    REFERENCES public.part_partparametertemplate (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partcategoryparameter_parameter_template_id_23cd836c
    ON public.part_partcategoryparametertemplate(parameter_template_id);


ALTER TABLE IF EXISTS public.part_partcategorystar
    ADD CONSTRAINT part_partcategorysta_category_id_0b58a151_fk_part_part FOREIGN KEY (category_id)
    REFERENCES public.part_partcategory (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partcategorystar_category_id_0b58a151
    ON public.part_partcategorystar(category_id);


ALTER TABLE IF EXISTS public.part_partcategorystar
    ADD CONSTRAINT part_partcategorystar_user_id_76c6a9c5_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partcategorystar_user_id_76c6a9c5
    ON public.part_partcategorystar(user_id);


ALTER TABLE IF EXISTS public.part_partinternalpricebreak
    ADD CONSTRAINT part_partinternalpricebreak_part_id_cd598ab5_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partinternalpricebreak_part_id_cd598ab5
    ON public.part_partinternalpricebreak(part_id);


ALTER TABLE IF EXISTS public.part_partparameter
    ADD CONSTRAINT part_partparameter_part_id_2c9ece3d_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partparameter_part_id_2c9ece3d
    ON public.part_partparameter(part_id);


ALTER TABLE IF EXISTS public.part_partparameter
    ADD CONSTRAINT part_partparameter_template_id_987efa9c_fk_part_part FOREIGN KEY (template_id)
    REFERENCES public.part_partparametertemplate (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partparameter_template_id_987efa9c
    ON public.part_partparameter(template_id);


ALTER TABLE IF EXISTS public.part_partpricing
    ADD CONSTRAINT part_partpricing_part_id_24e51ec7_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partpricing_part_id_key
    ON public.part_partpricing(part_id);


ALTER TABLE IF EXISTS public.part_partrelated
    ADD CONSTRAINT part_partrelated_part_1_id_f12341fa_fk_part_part_id FOREIGN KEY (part_1_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partrelated_part_1_id_f12341fa
    ON public.part_partrelated(part_1_id);


ALTER TABLE IF EXISTS public.part_partrelated
    ADD CONSTRAINT part_partrelated_part_2_id_11f08c1c_fk_part_part_id FOREIGN KEY (part_2_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partrelated_part_2_id_11f08c1c
    ON public.part_partrelated(part_2_id);


ALTER TABLE IF EXISTS public.part_partsellpricebreak
    ADD CONSTRAINT part_partsellpricebreak_part_id_02c2f017_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partsellpricebreak_part_id_02c2f017
    ON public.part_partsellpricebreak(part_id);


ALTER TABLE IF EXISTS public.part_partstar
    ADD CONSTRAINT part_partstar_part_id_ad2de1bf_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partstar_part_id_ad2de1bf
    ON public.part_partstar(part_id);


ALTER TABLE IF EXISTS public.part_partstar
    ADD CONSTRAINT part_partstar_user_id_ecc1041e_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_partstar_user_id_ecc1041e
    ON public.part_partstar(user_id);


ALTER TABLE IF EXISTS public.part_parttesttemplate
    ADD CONSTRAINT part_parttesttemplate_part_id_b20ccf9e_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_parttesttemplate_part_id_b20ccf9e
    ON public.part_parttesttemplate(part_id);


ALTER TABLE IF EXISTS public.part_supplierpart
    ADD CONSTRAINT part_supplierpart_manufacturer_part_id_a9805a45_fk_company_m FOREIGN KEY (manufacturer_part_id)
    REFERENCES public.company_manufacturerpart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_supplierpart_manufacturer_part_id_a9805a45
    ON public.part_supplierpart(manufacturer_part_id);


ALTER TABLE IF EXISTS public.part_supplierpart
    ADD CONSTRAINT part_supplierpart_part_id_d20a9b93_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_supplierpart_part_id_d20a9b93
    ON public.part_supplierpart(part_id);


ALTER TABLE IF EXISTS public.part_supplierpart
    ADD CONSTRAINT part_supplierpart_supplier_id_27f6ba1f_fk_company_company_id FOREIGN KEY (supplier_id)
    REFERENCES public.company_company (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_supplierpart_supplier_id_27f6ba1f
    ON public.part_supplierpart(supplier_id);


ALTER TABLE IF EXISTS public.part_supplierpricebreak
    ADD CONSTRAINT part_supplierpricebr_part_id_d47c452e_fk_part_supp FOREIGN KEY (part_id)
    REFERENCES public.part_supplierpart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS part_supplierpricebreak_part_id_d47c452e
    ON public.part_supplierpricebreak(part_id);


ALTER TABLE IF EXISTS public.plugin_notificationusersetting
    ADD CONSTRAINT plugin_notificationusersetting_user_id_25bc6532_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS plugin_notificationusersetting_user_id_25bc6532
    ON public.plugin_notificationusersetting(user_id);


ALTER TABLE IF EXISTS public.plugin_pluginsetting
    ADD CONSTRAINT plugin_pluginsetting_plugin_id_7e2ebfab_fk_plugin_pl FOREIGN KEY (plugin_id)
    REFERENCES public.plugin_pluginconfig (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS plugin_pluginsetting_plugin_id_7e2ebfab
    ON public.plugin_pluginsetting(plugin_id);


ALTER TABLE IF EXISTS public.socialaccount_socialaccount
    ADD CONSTRAINT socialaccount_socialaccount_user_id_8146e70c_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS socialaccount_socialaccount_user_id_8146e70c
    ON public.socialaccount_socialaccount(user_id);


ALTER TABLE IF EXISTS public.socialaccount_socialapp_sites
    ADD CONSTRAINT socialaccount_social_site_id_2579dee5_fk_django_si FOREIGN KEY (site_id)
    REFERENCES public.django_site (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS socialaccount_socialapp_sites_site_id_2579dee5
    ON public.socialaccount_socialapp_sites(site_id);


ALTER TABLE IF EXISTS public.socialaccount_socialapp_sites
    ADD CONSTRAINT socialaccount_social_socialapp_id_97fb6e7d_fk_socialacc FOREIGN KEY (socialapp_id)
    REFERENCES public.socialaccount_socialapp (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS socialaccount_socialapp_sites_socialapp_id_97fb6e7d
    ON public.socialaccount_socialapp_sites(socialapp_id);


ALTER TABLE IF EXISTS public.socialaccount_socialtoken
    ADD CONSTRAINT socialaccount_social_account_id_951f210e_fk_socialacc FOREIGN KEY (account_id)
    REFERENCES public.socialaccount_socialaccount (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS socialaccount_socialtoken_account_id_951f210e
    ON public.socialaccount_socialtoken(account_id);


ALTER TABLE IF EXISTS public.socialaccount_socialtoken
    ADD CONSTRAINT socialaccount_social_app_id_636a42d7_fk_socialacc FOREIGN KEY (app_id)
    REFERENCES public.socialaccount_socialapp (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS socialaccount_socialtoken_app_id_636a42d7
    ON public.socialaccount_socialtoken(app_id);


ALTER TABLE IF EXISTS public.stock_stockitem
    ADD CONSTRAINT stock_stockitem_belongs_to_id_21402c06_fk_stock_stockitem_id FOREIGN KEY (belongs_to_id)
    REFERENCES public.stock_stockitem (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitem_belongs_to_id_21402c06
    ON public.stock_stockitem(belongs_to_id);


ALTER TABLE IF EXISTS public.stock_stockitem
    ADD CONSTRAINT stock_stockitem_build_id_9a45ed8e_fk_build_build_id FOREIGN KEY (build_id)
    REFERENCES public.build_build (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitem_build_id_9a45ed8e
    ON public.stock_stockitem(build_id);


ALTER TABLE IF EXISTS public.stock_stockitem
    ADD CONSTRAINT stock_stockitem_customer_id_536111ff_fk_company_company_id FOREIGN KEY (customer_id)
    REFERENCES public.company_company (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitem_customer_id_536111ff
    ON public.stock_stockitem(customer_id);


ALTER TABLE IF EXISTS public.stock_stockitem
    ADD CONSTRAINT stock_stockitem_location_id_c9ddd15b_fk_stock_stocklocation_id FOREIGN KEY (location_id)
    REFERENCES public.stock_stocklocation (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitem_location_id_c9ddd15b
    ON public.stock_stockitem(location_id);


ALTER TABLE IF EXISTS public.stock_stockitem
    ADD CONSTRAINT stock_stockitem_owner_id_4ac4e2fb_fk_users_owner_id FOREIGN KEY (owner_id)
    REFERENCES public.users_owner (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitem_owner_id_4ac4e2fb
    ON public.stock_stockitem(owner_id);


ALTER TABLE IF EXISTS public.stock_stockitem
    ADD CONSTRAINT stock_stockitem_parent_id_d5bb01e7_fk_stock_stockitem_id FOREIGN KEY (parent_id)
    REFERENCES public.stock_stockitem (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitem_parent_id_d5bb01e7
    ON public.stock_stockitem(parent_id);


ALTER TABLE IF EXISTS public.stock_stockitem
    ADD CONSTRAINT stock_stockitem_part_id_e7807e9a_fk_part_part_id FOREIGN KEY (part_id)
    REFERENCES public.part_part (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitem_part_id_e7807e9a
    ON public.stock_stockitem(part_id);


ALTER TABLE IF EXISTS public.stock_stockitem
    ADD CONSTRAINT stock_stockitem_purchase_order_id_1fb0e19a_fk_order_pur FOREIGN KEY (purchase_order_id)
    REFERENCES public.order_purchaseorder (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitem_purchase_order_id_1fb0e19a
    ON public.stock_stockitem(purchase_order_id);


ALTER TABLE IF EXISTS public.stock_stockitem
    ADD CONSTRAINT stock_stockitem_sales_order_id_82bfcc30_fk_order_salesorder_id FOREIGN KEY (sales_order_id)
    REFERENCES public.order_salesorder (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitem_sales_order_id_82bfcc30
    ON public.stock_stockitem(sales_order_id);


ALTER TABLE IF EXISTS public.stock_stockitem
    ADD CONSTRAINT stock_stockitem_stocktake_user_id_470598d1_fk_auth_user_id FOREIGN KEY (stocktake_user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitem_stocktake_user_id_470598d1
    ON public.stock_stockitem(stocktake_user_id);


ALTER TABLE IF EXISTS public.stock_stockitem
    ADD CONSTRAINT stock_stockitem_supplier_part_id_cbdd39e0_fk_part_supp FOREIGN KEY (supplier_part_id)
    REFERENCES public.part_supplierpart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitem_supplier_part_id_cbdd39e0
    ON public.stock_stockitem(supplier_part_id);


ALTER TABLE IF EXISTS public.stock_stockitemattachment
    ADD CONSTRAINT stock_stockitemattac_stock_item_id_c221be02_fk_stock_sto FOREIGN KEY (stock_item_id)
    REFERENCES public.stock_stockitem (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitemattachment_stock_item_id_c221be02
    ON public.stock_stockitemattachment(stock_item_id);


ALTER TABLE IF EXISTS public.stock_stockitemattachment
    ADD CONSTRAINT stock_stockitemattachment_user_id_aa09e205_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitemattachment_user_id_aa09e205
    ON public.stock_stockitemattachment(user_id);


ALTER TABLE IF EXISTS public.stock_stockitemtestresult
    ADD CONSTRAINT stock_stockitemtestr_stock_item_id_78242344_fk_stock_sto FOREIGN KEY (stock_item_id)
    REFERENCES public.stock_stockitem (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitemtestresult_stock_item_id_78242344
    ON public.stock_stockitemtestresult(stock_item_id);


ALTER TABLE IF EXISTS public.stock_stockitemtestresult
    ADD CONSTRAINT stock_stockitemtestresult_user_id_91b70ae0_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitemtestresult_user_id_91b70ae0
    ON public.stock_stockitemtestresult(user_id);


ALTER TABLE IF EXISTS public.stock_stockitemtracking
    ADD CONSTRAINT stock_stockitemtracking_item_id_2680ae39_fk_stock_stockitem_id FOREIGN KEY (item_id)
    REFERENCES public.stock_stockitem (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitemtracking_item_id_2680ae39
    ON public.stock_stockitemtracking(item_id);


ALTER TABLE IF EXISTS public.stock_stockitemtracking
    ADD CONSTRAINT stock_stockitemtracking_user_id_794831a6_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stockitemtracking_user_id_794831a6
    ON public.stock_stockitemtracking(user_id);


ALTER TABLE IF EXISTS public.stock_stocklocation
    ADD CONSTRAINT stock_stocklocation_owner_id_4e88b86d_fk_users_owner_id FOREIGN KEY (owner_id)
    REFERENCES public.users_owner (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stocklocation_owner_id_4e88b86d
    ON public.stock_stocklocation(owner_id);


ALTER TABLE IF EXISTS public.stock_stocklocation
    ADD CONSTRAINT stock_stocklocation_parent_id_4bb2659b_fk_stock_sto FOREIGN KEY (parent_id)
    REFERENCES public.stock_stocklocation (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS stock_stocklocation_parent_id_4bb2659b
    ON public.stock_stocklocation(parent_id);


ALTER TABLE IF EXISTS public.user_sessions_session
    ADD CONSTRAINT user_sessions_session_user_id_c6dc9ffa_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS user_sessions_session_user_id_c6dc9ffa
    ON public.user_sessions_session(user_id);


ALTER TABLE IF EXISTS public.users_owner
    ADD CONSTRAINT users_owner_owner_type_id_b45ef20a_fk_django_content_type_id FOREIGN KEY (owner_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS users_owner_owner_type_id_b45ef20a
    ON public.users_owner(owner_type_id);


ALTER TABLE IF EXISTS public.users_ruleset
    ADD CONSTRAINT users_ruleset_group_id_3e9afdba_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS users_ruleset_group_id_3e9afdba
    ON public.users_ruleset(group_id);

END;
